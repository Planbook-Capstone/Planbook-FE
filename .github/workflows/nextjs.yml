name: 🚀 Deploy PlanBook to VPS

on:
  push:
    branches: [main, master]

env:
  VPS_APP_DIR: "/opt/planbook"
  CONTAINER_NAME: "planbook-app"

jobs:
  deploy:
    name: 🚀 Deploy to VPS
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - name: 📤 SSH into VPS and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          port: 22
          script: |
            echo "📥 Pulling latest code..."
            cd ${{ env.VPS_APP_DIR }}
            git reset --hard
            git pull origin main || git pull origin master

            echo "🛑 Stopping old container if running..."
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true

            echo "🏗️ Building and starting container..."
            docker compose -f docker-compose.yml up -d --build

            echo "⏳ Waiting for container to start..."
            sleep 20

            echo "🔍 Performing health check..."
            if curl -f http://localhost:3000/health || curl -f http://localhost:3000; then
              echo "✅ Deployment successful!"
              docker image prune -f
            else
              echo "❌ Health check failed! Stopping container..."
              docker stop ${{ env.CONTAINER_NAME }} || true
              exit 1
            fi

      - name: 🔔 Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment to VPS completed successfully!"
            echo "🌐 App URL: http://${{ secrets.VPS_HOST }}"
          else
            echo "❌ Deployment failed!"
